require("xfdm.base")
require("xfdm.xplane")

require("xfdm.plugins.xchecklist")
require("xfdm.plugins.x-camera")

pedals    = require("xfdm.joysticks.ch_pedals")
sidestick = require("xfdm.joysticks.vkb_gunfighter_mk2_scg_l")
yoke      = require("xfdm.joysticks.honeycomb_alpha")
throttles = require("xfdm.joysticks.honeycomb_bravo")
            require("xfdm.joysticks.honeycomb_bravo_leds")
rift      = require("xfdm.joysticks.oculus_rift")

require("xfdm.aircrafts.FF-A320")
require("xfdm.aircrafts.FF-A320-Alpha")
require("xfdm.aircrafts.FF-B777v2")
require("xfdm.aircrafts.FF-B777v2-Alpha")
require("xfdm.aircrafts.Toliss-A320")
require("xfdm.aircrafts.Toliss-A320-Alpha")
require("xfdm.aircrafts.Zibo-B737")
require("xfdm.aircrafts.Zibo-B737-Alpha")
require("xfdm.aircrafts.FlyJSim-Q4XP")
require("xfdm.aircrafts.FlyJSim-Q4XP-Alpha")
require("xfdm.aircrafts.XCrafts-EJets")
require("xfdm.aircrafts.XCrafts-EJets-Alpha")

clear_all_axis_assignments()
clear_all_button_assignments()

xfdm:requestMapping("axis_vr_touchpad_x", xfdmConInAxis, rift.L_Joy_X)
xfdm:requestMapping("axis_vr_touchpad_y", xfdmConInAxis, rift.L_Joy_Y)
xfdm:requestMapping("axis_vr_trigger",    xfdmConInAxis, rift.L_Joy_Index)
--set_axis_assignment(rift.R_Joy_X,      "VR Touchpad X"  , "normal")
--set_axis_assignment(rift.R_Joy_Y,      "VR Touchpad Y"  , "normal")
xfdm:requestMapping("axis_vr_trigger",    xfdmConInAxis, rift.R_Joy_Index)

xfdm:requestMapping("vr_menu",       xfdmConInButton, rift.L_Y)
xfdm:requestMapping("vr_reset_view", xfdmConInButton, rift.L_X)
xfdm:requestMapping("vr_touchpad",   xfdmConInButton, rift.L_Touchpad)
xfdm:requestMapping("vr_select",     xfdmConInButton, rift.L_Index)
xfdm:requestMapping("vr_menu",       xfdmConInButton, rift.R_Y)
xfdm:requestMapping("vr_zoom",       xfdmConInButton, rift.R_X)
xfdm:requestMapping("vr_touchpad",   xfdmConInButton, rift.R_Touchpad)
xfdm:requestMapping("vr_select",     xfdmConInButton, rift.R_Index)

if (string.find(PLANE_ICAO, "A3%d%d")  or -- Any Airbus A3xx
	string.find(PLANE_ICAO, "A19N")    or -- Airbus A319 Neo 
	string.find(PLANE_ICAO, "A2[01]N") or -- Rest of A320 Neo Family
    string.find(PLANE_ICAO, "BCS[13]")    -- Bombardier C-Series
   ) then
	xfdm:requestMapping("cmd_ap_disc",            xfdmConInButton, sidestick.btn_red)
	xfdm:requestMapping("cmd_at_cws",             xfdmConInButton, sidestick.trig_fwd)
	xfdm:requestMapping("checklist_toggle",       xfdmConInButton, sidestick.hat_a4_up)
	xfdm:requestMapping("checklist_reset",        xfdmConInButton, sidestick.hat_a4_press)
	xfdm:requestMapping("checklist_check",        xfdmConInButton, sidestick.hat_a4_down)
	xfdm:requestMapping("checklist_previous",     xfdmConInButton, sidestick.hat_a4_left)
	xfdm:requestMapping("checklist_next",         xfdmConInButton, sidestick.hat_a4_right)
	xfdm:requestMapping("view_default",           xfdmConInButton, sidestick.btn_b1)
	xfdm:requestMapping("view_circle",            xfdmConInButton, sidestick.btn_d1)
	xfdm:requestMapping("trim_pitch_up",          xfdmConInButton, sidestick.hat_a3_down)
	xfdm:requestMapping("trim_pitch_down",        xfdmConInButton, sidestick.hat_a3_up)
	xfdm:requestMapping("trim_rudder_left",       xfdmConInButton, sidestick.hat_a3_left)
	xfdm:requestMapping("trim_rudder_right",      xfdmConInButton, sidestick.hat_a3_right)

	xfdm:requestMapping("view_up",                xfdmConInButton, sidestick.hat_a1_up)
	xfdm:requestMapping("view_up_right",          xfdmConInButton, sidestick.hat_a1_up_right) 
	xfdm:requestMapping("view_right",             xfdmConInButton, sidestick.hat_a1_right)
	xfdm:requestMapping("view_down_right",        xfdmConInButton, sidestick.hat_a1_down_right)
	xfdm:requestMapping("view_down",              xfdmConInButton, sidestick.hat_a1_down)
	xfdm:requestMapping("view_down_left",         xfdmConInButton, sidestick.hat_a1_down_left)
	xfdm:requestMapping("view_left",              xfdmConInButton, sidestick.hat_a1_left)
	xfdm:requestMapping("view_up_left",           xfdmConInButton, sidestick.hat_a1_up_left)

	xfdm:requestMapping("axis_roll",              xfdmConInAxis,   sidestick.axis_roll)
	xfdm:requestMapping("axis_pitch",             xfdmConInAxis,   sidestick.axis_pitch)
else
	xfdm:requestMapping("cmd_ap_disc",            xfdmConInButton, yoke.r_btn_red)
	xfdm:requestMapping("cmd_at_cws",             xfdmConInButton, yoke.l_btn_white)
	xfdm:requestMapping("view_default",           xfdmConInButton, yoke.r_btn_white)
	xfdm:requestMapping("trim_pitch_up1",         xfdmConInButton, yoke.l_trim_1dn)
	xfdm:requestMapping("trim_pitch_down1",       xfdmConInButton, yoke.l_trim_1up)
	xfdm:requestMapping("trim_pitch_up2",         xfdmConInButton, yoke.l_trim_2dn)
	xfdm:requestMapping("trim_pitch_down2",       xfdmConInButton, yoke.l_trim_2up)
	xfdm:requestMapping("trim_rudder_left1",      xfdmConInButton, yoke.r_trim_1left)
	xfdm:requestMapping("trim_rudder_right1",     xfdmConInButton, yoke.r_trim_1right)
	xfdm:requestMapping("trim_rudder_left2",      xfdmConInButton, yoke.r_trim_2left)
	xfdm:requestMapping("trim_rudder_right2",     xfdmConInButton, yoke.r_trim_2right)	
	
	xfdm:requestMapping("view_up",                xfdmConInButton, yoke.hatsw_up)     
	xfdm:requestMapping("view_up_right",          xfdmConInButton, yoke.hatsw_up_right)
	xfdm:requestMapping("view_right",             xfdmConInButton, yoke.hatsw_right) 
	xfdm:requestMapping("view_down_right",        xfdmConInButton, yoke.hatsw_down_right)
	xfdm:requestMapping("view_down",              xfdmConInButton, yoke.hatsw_down)
	xfdm:requestMapping("view_down_left",         xfdmConInButton, yoke.hatsw_down_left)
	xfdm:requestMapping("view_left",              xfdmConInButton, yoke.hatsw_left)
	xfdm:requestMapping("view_up_left",           xfdmConInButton, yoke.hatsw_up_left)

	xfdm:requestMapping("axis_roll",              xfdmConInAxis,   yoke.axis_roll)
	xfdm:requestMapping("axis_pitch",             xfdmConInAxis,   yoke.axis_pitch)
end

xfdm:requestMapping("elec_bat_on",                xfdmConInButton,   yoke.sw_batt_on)
xfdm:requestMapping("elec_bat_off",               xfdmConInButton,   yoke.sw_batt_off)
xfdm:requestMapping("elec_gen_on",                xfdmConInButton,   yoke.sw_alt_on)
xfdm:requestMapping("elec_gen_off",               xfdmConInButton,   yoke.sw_alt_off)

xfdm:requestMapping("nav_irs1_on",                xfdmConInButton,   yoke.sw_bus1_on)
xfdm:requestMapping("nav_irs1_off",               xfdmConInButton,   yoke.sw_bus1_off)
xfdm:requestMapping("nav_irs2_on",                xfdmConInButton,   yoke.sw_bus2_on)
xfdm:requestMapping("nav_irs2_off",               xfdmConInButton,   yoke.sw_bus2_off)

xfdm:requestMapping("lights_bcn_on",              xfdmConInButton,   yoke.sw_bcn_on)
xfdm:requestMapping("lights_bcn_off",             xfdmConInButton,   yoke.sw_bcn_off)
xfdm:requestMapping("lights_nav_on",              xfdmConInButton,   yoke.sw_nav_on)
xfdm:requestMapping("lights_nav_off",             xfdmConInButton,   yoke.sw_nav_off)
xfdm:requestMapping("lights_rwy_turnoff_on",      xfdmConInButton,   yoke.sw_taxi_on)
xfdm:requestMapping("lights_rwy_turnoff_off",     xfdmConInButton,   yoke.sw_taxi_off)
xfdm:requestMapping("lights_logo_on",             xfdmConInButton,   yoke.sw_land_on)
xfdm:requestMapping("lights_logo_off",            xfdmConInButton,   yoke.sw_land_off)
xfdm:requestMapping("lights_inspect_on",          xfdmConInButton,   yoke.sw_strobe_on)
xfdm:requestMapping("lights_inspect_off",         xfdmConInButton,   yoke.sw_strobe_off)

xfdm:requestMapping("axis_yaw",               xfdmConInAxis,   pedals.yaw)
xfdm:requestMapping("axis_left_toe_brake",    xfdmConInAxis,   pedals.brake_l,"reverse")
xfdm:requestMapping("axis_right_toe_brake",   xfdmConInAxis,   pedals.brake_r,"reverse")

xfdm:requestMapping("park_brake",             xfdmConInButton, throttles.sw1_up)
xfdm:requestMapping("anti_ice_eng_on",        xfdmConInButton, throttles.sw2_up)
xfdm:requestMapping("anti_ice_eng_off",       xfdmConInButton, throttles.sw2_dn)
xfdm:requestMapping("anti_ice_wing_on",       xfdmConInButton, throttles.sw3_up)
xfdm:requestMapping("anti_ice_wing_off",      xfdmConInButton, throttles.sw3_dn)
xfdm:requestMapping("white_flashlight",       xfdmConInButton, throttles.sw4_up)
xfdm:requestMapping("lights_strobe_on",       xfdmConInButton, throttles.sw5_up)
xfdm:requestMapping("lights_strobe_off",      xfdmConInButton, throttles.sw5_dn)
xfdm:requestMapping("lights_taxi_on",         xfdmConInButton, throttles.sw6_up)
xfdm:requestMapping("lights_taxi_off",        xfdmConInButton, throttles.sw6_dn)
xfdm:requestMapping("lights_ldg_on",          xfdmConInButton, throttles.sw7_up)
xfdm:requestMapping("lights_ldg_off",         xfdmConInButton, throttles.sw7_dn)

xfdm:requestMapping("flaps_up",               xfdmConInButton, throttles.flaps_up)
xfdm:requestMapping("flaps_down",             xfdmConInButton, throttles.flaps_dn)
xfdm:requestMapping("gear_up",                xfdmConInButton, throttles.gear_up)
xfdm:requestMapping("gear_down",              xfdmConInButton, throttles.gear_dn)
--xfdm:requestMapping("trim_pitch_up",          xfdmConInButton, throttles.trim_dn)
--xfdm:requestMapping("trim_pitch_down",        xfdmConInButton, throttles.trim_up)

xfdm:requestMapping("bravo_axis_1",           xfdmConInAxis,   throttles.axis1)
xfdm:requestMapping("bravo_axis_2",           xfdmConInAxis,   throttles.axis2)
xfdm:requestMapping("bravo_axis12_2nd_func",  xfdmConInButton, throttles.axis12_2nd_func)
xfdm:requestMapping("bravo_axis_3",           xfdmConInAxis,   throttles.axis3)
xfdm:requestMapping("bravo_axis3_2nd_func",   xfdmConInButton, throttles.axis3_2nd_func)
xfdm:requestMapping("bravo_axis_4",           xfdmConInAxis,   throttles.axis4)
xfdm:requestMapping("bravo_axis_5",           xfdmConInAxis,   throttles.axis5)
xfdm:requestMapping("bravo_axis_6",           xfdmConInAxis,   throttles.axis6)

xfdm:requestMapping("bravo_axis_2_rev_handle", xfdmConInButton, throttles.axis2_rev_handle)
xfdm:requestMapping("bravo_axis_3_rev_handle", xfdmConInButton, throttles.axis3_rev_handle)
xfdm:requestMapping("bravo_axis_4_rev_handle", xfdmConInButton, throttles.axis4_rev_handle)
xfdm:requestMapping("bravo_axis_5_rev_handle", xfdmConInButton, throttles.axis5_rev_handle)

xfdm:requestMapping("bravo_axis_1_rev_zone",  xfdmConInButton, throttles.axis1_rev_zone)
xfdm:requestMapping("bravo_axis_2_rev_zone",  xfdmConInButton, throttles.axis2_rev_zone)
xfdm:requestMapping("bravo_axis_3_rev_zone",  xfdmConInButton, throttles.axis3_rev_zone)
xfdm:requestMapping("bravo_axis_4_rev_zone",  xfdmConInButton, throttles.axis4_rev_zone)
xfdm:requestMapping("bravo_axis_5_rev_zone",  xfdmConInButton, throttles.axis5_rev_zone)
xfdm:requestMapping("bravo_axis_6_rev_zone",  xfdmConInButton, throttles.axis6_rev_zone)

xfdm:requestMapping("bravo_ap_dial_cw",       xfdmConInButton, throttles.ap_incr)
xfdm:requestMapping("bravo_ap_dial_ccw",      xfdmConInButton, throttles.ap_decr)
xfdm:requestMapping("bravo_ap_button_hdg",    xfdmConInButton, throttles.ap_hdg)
xfdm:requestMapping("bravo_ap_button_nav",    xfdmConInButton, throttles.ap_nav)
xfdm:requestMapping("bravo_ap_button_apr",    xfdmConInButton, throttles.ap_apr)
xfdm:requestMapping("bravo_ap_button_rev",    xfdmConInButton, throttles.ap_rev)
xfdm:requestMapping("bravo_ap_button_alt",    xfdmConInButton, throttles.ap_alt)
xfdm:requestMapping("bravo_ap_button_vs",     xfdmConInButton, throttles.ap_vs)
xfdm:requestMapping("bravo_ap_button_ias",    xfdmConInButton, throttles.ap_ias)
xfdm:requestMapping("bravo_ap_button_cmd",    xfdmConInButton, throttles.ap_master)

xfdm:requestMapping("bravo_ap_mode_hdg",      xfdmConInButton, throttles.ap_mode_hdg)
xfdm:requestMapping("bravo_ap_mode_alt",      xfdmConInButton, throttles.ap_mode_alt)
xfdm:requestMapping("bravo_ap_mode_ver",      xfdmConInButton, throttles.ap_mode_vs)
xfdm:requestMapping("bravo_ap_mode_ias",      xfdmConInButton, throttles.ap_mode_ias)
xfdm:requestMapping("bravo_ap_mode_crs",      xfdmConInButton, throttles.ap_mode_crs)


if (pedals.state    == xfdmJoyNc or 
    sidestick.state == xfdmJoyNc or
    throttles.state == xfdmJoyNc) then
  xfdm.msg = "XFDM (Error): A required connected joystick could not be detected."
  logMsg("XFDM (Error): A required connected joystick could not be detected.")
else
  do_every_frame("xfdm:runner()")
  xfdm.joysticks.honeycomb_bravo.leds:runner()
end
